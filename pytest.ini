[pytest]
# Pytest configuration for nlp-insights project

# Minimum Python version
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test discovery patterns
testpaths = tests

# Output options
addopts =
    # Verbose output
    -v
    # Show extra test summary info
    --tb=short
    # Show local variables in tracebacks
    -l
    # Show coverage report
    --cov=trials
    --cov-report=term-missing
    --cov-report=html
    # Strict markers
    --strict-markers
    # Warnings
    -W ignore::DeprecationWarning
    -W ignore::PendingDeprecationWarning
    # Fail on first error (comment out for full test run)
    # -x

# Markers for categorizing tests
markers =
    unit: Unit tests for individual functions and classes
    integration: Integration tests for multiple components
    e2e: End-to-end tests for complete workflows
    slow: Tests that take a long time to run
    api: Tests that require API access
    ui: Tests for UI components with Playwright
    playwright: Playwright UI tests (requires running app)

# Coverage options
[coverage:run]
source = trials
omit =
    */tests/*
    */conftest.py
    */__pycache__/*
    */venv/*
    */env/*

[coverage:report]
precision = 2
show_missing = True
skip_covered = False

# Exclude lines from coverage
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
    @abc.abstractmethod
